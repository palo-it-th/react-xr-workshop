/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./green_arcade_machine.glb --types 
Author: pvtrykbvbski (https://sketchfab.com/pvtrykbvbski)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/green-arcade-machine-389b02908874415ba2814f4e39e038a4
Title: green arcade machine
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { GLTFAction } from '../../../types/common';
import MachineScreen from '../UI/MachineScreen';

type GLTFResult = GLTF & {
  nodes: {
    Cube001_GREEN_ARCADE_MACHINE_0: THREE.Mesh;
    Sphere004_GREEN_ARCADE_MACHINE_0: THREE.Mesh;
    Cylinder002_GREEN_ARCADE_MACHINE_0: THREE.Mesh;
    Sphere005_GREEN_ARCADE_MACHINE_0: THREE.Mesh;
    arcade_machine_green_GREEN_ARCADE_MACHINE_0: THREE.Mesh;
  };
  materials: {
    GREEN_ARCADE_MACHINE: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function GreenArcadeMachine(props: JSX.IntrinsicElements['group']) {
  const modelRef = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF(
    '/3D-models/green_arcade_machine.glb',
  ) as GLTFResult;

  return (
    <group ref={modelRef} {...props} dispose={null}>
      <group scale={0.01}>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={
              nodes.arcade_machine_green_GREEN_ARCADE_MACHINE_0.geometry
            }
            material={materials.GREEN_ARCADE_MACHINE}
          >
            <MachineScreen />
          </mesh>
          <mesh
            geometry={nodes.Cube001_GREEN_ARCADE_MACHINE_0.geometry}
            material={materials.GREEN_ARCADE_MACHINE}
          ></mesh>
          <mesh
            geometry={nodes.Sphere004_GREEN_ARCADE_MACHINE_0.geometry}
            material={materials.GREEN_ARCADE_MACHINE}
          />
          <mesh
            geometry={nodes.Cylinder002_GREEN_ARCADE_MACHINE_0.geometry}
            material={materials.GREEN_ARCADE_MACHINE}
          />
          <mesh
            geometry={nodes.Sphere005_GREEN_ARCADE_MACHINE_0.geometry}
            material={materials.GREEN_ARCADE_MACHINE}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/3D-models/green_arcade_machine.glb');
