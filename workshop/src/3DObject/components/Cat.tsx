/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./cat.glb --types 
Author: workworkfun (https://sketchfab.com/workworkfun)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/matty-a-cat-4c91f373310c4b3b8249a54e0c51f1be
Title: Matty (a Cat)
*/

import * as THREE from 'three';
import React, { useEffect } from 'react';
import { useGraph } from '@react-three/fiber';
import { useGLTF, useAnimations } from '@react-three/drei';
import { GLTF, SkeletonUtils } from 'three-stdlib';

export type CatActionName =
  | 'ArmatureAction'
  | 'Dead'
  | 'Drinking'
  | 'Jump_Quick'
  | 'Jump_Slow'
  | 'Looking'
  | 'Run1'
  | 'Run2'
  | 'Sitting1'
  | 'Tailing'
  | 'Waiting'
  | 'Walking';

interface GLTFAction extends THREE.AnimationClip {
  name: CatActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    Object_7: THREE.SkinnedMesh;
    Object_9: THREE.SkinnedMesh;
    Object_11: THREE.SkinnedMesh;
    Object_13: THREE.SkinnedMesh;
    Object_15: THREE.SkinnedMesh;
    Object_17: THREE.SkinnedMesh;
    Object_19: THREE.SkinnedMesh;
    Object_21: THREE.SkinnedMesh;
    Object_23: THREE.SkinnedMesh;
    Object_25: THREE.SkinnedMesh;
    Object_27: THREE.SkinnedMesh;
    Object_29: THREE.SkinnedMesh;
    Object_31: THREE.SkinnedMesh;
    Object_33: THREE.SkinnedMesh;
    Object_35: THREE.SkinnedMesh;
    GLTF_created_0_rootJoint: THREE.Bone;
  };
  materials: {
    White: THREE.MeshStandardMaterial;
    material_0: THREE.MeshStandardMaterial;
    Spiral: THREE.MeshStandardMaterial;
    ['Material.001']: THREE.MeshStandardMaterial;
    ['Material.004']: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
    ['Material.003']: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type CatProps = {
  triggerAction?: CatActionName;
  stopAction?: CatActionName;
  stopAllActions?: boolean;
};

export function CatModel(props: JSX.IntrinsicElements['group'] & CatProps) {
  const { triggerAction, stopAction, stopAllActions } = props;

  const modelRef = React.useRef<THREE.Group>(null);
  const { scene, animations } = useGLTF('/3D-models/cat.glb');
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone) as GLTFResult;
  const { actions } = useAnimations(animations, modelRef);

  useEffect(() => {
    if (props.triggerAction) {
      actions[props.triggerAction]?.play();
    }
    if (props.stopAction) {
      actions[props.stopAction]?.stop();
    }
    if (props.stopAllActions && Object.keys(actions).length > 0) {
      Object.values(actions).forEach((action) => action?.stop());
    }
  }, [triggerAction, stopAction, stopAllActions, actions]);

  return (
    <group ref={modelRef} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Armature_40">
                <group name="GLTF_created_0">
                  <primitive object={nodes.GLTF_created_0_rootJoint} />
                  <group name="Body_25" />
                  <group name="EarL_26" />
                  <group name="EarR_27" />
                  <group name="Eye1_28" />
                  <group name="Eye2_29" />
                  <group name="Head_30" />
                  <group name="Leg1_31" />
                  <group name="Leg2_32" />
                  <group name="Leg3_33" />
                  <group name="Leg4_34" />
                  <group name="Mouth_35" />
                  <group name="Mustache_36" />
                  <group name="Nose_37" />
                  <group name="Shooter_38" />
                  <group name="Tail_39" />
                  <skinnedMesh
                    name="Object_7"
                    geometry={nodes.Object_7.geometry}
                    material={materials.White}
                    skeleton={nodes.Object_7.skeleton}
                  />
                  <skinnedMesh
                    name="Object_9"
                    geometry={nodes.Object_9.geometry}
                    material={materials.material_0}
                    skeleton={nodes.Object_9.skeleton}
                  />
                  <skinnedMesh
                    name="Object_11"
                    geometry={nodes.Object_11.geometry}
                    material={materials.material_0}
                    skeleton={nodes.Object_11.skeleton}
                  />
                  <skinnedMesh
                    name="Object_13"
                    geometry={nodes.Object_13.geometry}
                    material={materials.Spiral}
                    skeleton={nodes.Object_13.skeleton}
                  />
                  <skinnedMesh
                    name="Object_15"
                    geometry={nodes.Object_15.geometry}
                    material={materials.Spiral}
                    skeleton={nodes.Object_15.skeleton}
                  />
                  <skinnedMesh
                    name="Object_17"
                    geometry={nodes.Object_17.geometry}
                    material={materials.White}
                    skeleton={nodes.Object_17.skeleton}
                  />
                  <skinnedMesh
                    name="Object_19"
                    geometry={nodes.Object_19.geometry}
                    material={materials.White}
                    skeleton={nodes.Object_19.skeleton}
                  />
                  <skinnedMesh
                    name="Object_21"
                    geometry={nodes.Object_21.geometry}
                    material={materials.White}
                    skeleton={nodes.Object_21.skeleton}
                  />
                  <skinnedMesh
                    name="Object_23"
                    geometry={nodes.Object_23.geometry}
                    material={materials.White}
                    skeleton={nodes.Object_23.skeleton}
                  />
                  <skinnedMesh
                    name="Object_25"
                    geometry={nodes.Object_25.geometry}
                    material={materials.White}
                    skeleton={nodes.Object_25.skeleton}
                  />
                  <skinnedMesh
                    name="Object_27"
                    geometry={nodes.Object_27.geometry}
                    material={materials['Material.001']}
                    skeleton={nodes.Object_27.skeleton}
                  />
                  <skinnedMesh
                    name="Object_29"
                    geometry={nodes.Object_29.geometry}
                    material={materials['Material.004']}
                    skeleton={nodes.Object_29.skeleton}
                  />
                  <skinnedMesh
                    name="Object_31"
                    geometry={nodes.Object_31.geometry}
                    material={materials.Material}
                    skeleton={nodes.Object_31.skeleton}
                  />
                  <skinnedMesh
                    name="Object_33"
                    geometry={nodes.Object_33.geometry}
                    material={materials['Material.003']}
                    skeleton={nodes.Object_33.skeleton}
                  />
                  <skinnedMesh
                    name="Object_35"
                    geometry={nodes.Object_35.geometry}
                    material={materials.White}
                    skeleton={nodes.Object_35.skeleton}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/3D-models/cat.glb');
